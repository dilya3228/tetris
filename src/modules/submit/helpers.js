// === helpers –¥–ª—è skip-–ª–∏—Å—Ç–∞ ===

import {HH_LISTING_URL} from "../../config/constants";

const SKIP_KEY = "hh_skip_vacancy_ids";

function loadSkipSet() {
    try {
        return new Set(JSON.parse(localStorage.getItem(SKIP_KEY) || "[]"));
    } catch { return new Set(); }
}
function saveSkipSet(set) {
    localStorage.setItem(SKIP_KEY, JSON.stringify([...set]));
}

/** –î–æ—Å—Ç–∞—ë–º vacancyId –∏–∑ href (–∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –∏–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ) */
function getVacancyIdFromHref(href) {
    try {
        const u = new URL(href, location.origin);
        return u.searchParams.get("vacancyId");
    } catch { return null; }
}

/** –ò—â–µ–º href –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è" –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ */
function getResponseHrefFromCard(cardEl) {
    // –µ—Å–ª–∏ —Å–∞–º–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ ‚Äî <a>, –±–µ—Ä–µ–º –µ—ë href; –∏–Ω–∞—á–µ –∏—â–µ–º –≤–ª–æ–∂–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É/–∫–Ω–æ–ø–∫—É
    if (cardEl?.getAttribute?.("href")) return cardEl.getAttribute("href");
    const a = cardEl?.querySelector?.('a[href*="/applicant/vacancy_response"]');
    return a?.getAttribute("href") || null;
}

function waitForDomReady(timeout = 10000) {
    return new Promise((resolve, reject) => {
        if (document.readyState === "complete" || document.readyState === "interactive") {
            return resolve();
        }

        const timer = setTimeout(() => reject(new Error("‚è± DOM –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ timeout")), timeout);

        window.addEventListener("DOMContentLoaded", () => {
            clearTimeout(timer);
            resolve();
        });
    });
}



export async function goBackToListingSafely() {
    console.warn("üîô –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–∏—Å–∫–∞");

    window.location.href = HH_LISTING_URL;

    await waitForDomReady();
}

export function addToSkippedUrls(url) {
    const key = "hh_skipped_urls";
    try {
        const stored = JSON.parse(localStorage.getItem(key) || "[]");
        if (!stored.includes(url)) {
            stored.push(url);
            localStorage.setItem(key, JSON.stringify(stored));
            console.log("üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤ hh_skipped_urls:", url);
        } else {
            console.log("‚ÑπÔ∏è –°—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ hh_skipped_urls");
        }
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ hh_skipped_urls", e);
    }
}


// === –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞–∑–∞–¥ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º ===
export async function goBackAndWait() {
    console.warn("üîô –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ–∏—Å–∫–∞");
    // —Å—Ç–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ–π –ª–æ–∫, —á—Ç–æ–±—ã –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–æ –¥–≤–∞ —Ä–∞–∑–∞
    sessionStorage.setItem("hh_nav_lock", "1");

    // —á—Ç–æ–±—ã –Ω–µ –ø–ª–æ–¥–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é (–∏ –Ω–µ –ø–æ–ø–∞—Å—Ç—å –Ω–∞–∑–∞–¥ –Ω–∞ —Ñ–æ—Ä–º—É)
    location.replace(HH_LISTING_URL);

    // –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ç–æ–∫
    await new Promise(() => {}); // –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è
}
// === –¥–µ—Ç–µ–∫—Ü–∏—è "–ø–æ–ø–∞–ª–∏ –Ω–∞ —Ñ–æ—Ä–º—É" –≤ —Ç–µ–∫—É—â–µ–º URL/DOM ===
export function pageHasText(text) {
    return document.body?.innerText.includes(text);
}
