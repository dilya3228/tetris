// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–¥–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤
import { getIsSubmitting } from "../../globals/globals.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
import { CONSTANTS } from "../../config/constants.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
import { SELECTORS } from "../../config/selectors.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–¥–µ—Ä–∂–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
import { delay, getRandomDelay } from "../../utils/delay.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏
// import { skipVacancy } from '../../utils/addToBlacklist.js';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–∞–ø–æ–≤
import {
  confirmCountry, // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –≤ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–µ
  confirmEmployerAlert, // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "–ù–µ–ø—Ä—è–º–æ–π —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å"
  checkPopupActive, // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ—Ç–∫—Ä—ã—Ç –ª–∏ –ø–æ–ø–∞–ø —Ñ–æ—Ä–º—ã –æ—Ç–∫–ª–∏–∫–∞
} from "../../utils/popupHelpers.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ –ø–æ–∞–ø
import { submitCoverLetterPopup } from "../popup/submitCoverLetterPopup.js";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –Ω–∞–ø—Ä—è–º—É—é
import { submitCoverLetter } from "../popup/submitCoverLetter.js";
import {addToSkippedUrls, goBackAndWait, pageHasText} from './helpers.js'
import {handleAlreadyViewedAndExit} from "../../utils/alreadyViewedAndExit";

export async function submitMultiVacancies() {

  const isFormPage = location.href.includes("startedWithQuestion=false") || pageHasText("–î–ª—è –æ—Ç–∫–ª–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å");

  const skip = new Set(JSON.parse(localStorage.getItem("hh_skip_vacancy_ids") || "[]"));

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–æ—Ä–º–µ-–æ–ø—Ä–æ—Å–Ω–∏–∫–µ –ª–∏ –º—ã
  if (isFormPage) {
    const url = new URL(location.href);
    const id = url.searchParams.get("vacancyId");
    if (id) {

      skip.add(id);
      localStorage.setItem("hh_skip_vacancy_ids", JSON.stringify([...skip]));
      console.warn("üö´ –î–æ–±–∞–≤–∏–ª –≤ skip –ø–æ startedWithQuestion:", id);
    }
    // await goBackAndWait({ timeout: 20000 });
    addToSkippedUrls(location.href); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∫–∞–Ω—Å–∏—é –≤ —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –≤—Ä—É—á–Ω—É—é —Å—Å—ã–ª–∫–∏ –æ—Ç–∫—Ä—ã—Ç—å
    await goBackAndWait();

    await delay(300);

    return;
  }

  const vacancies = document.querySelectorAll(SELECTORS.vacancyCards);
  if (!vacancies.length) return;


  for (const vacancy of vacancies) {
    if (!getIsSubmitting()) {
      console.warn("–∏—Å—Ç–æ—á–Ω–∏–∫ –±–∞–≥–∞ - getIsSubmitting() –≤–µ—Ä–Ω—É–ª false ‚Äî –ø—Ä–µ—Ä—ã–≤–∞—é —Ü–∏–∫–ª –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ");
      return;
    }

    vacancy.scrollIntoView({ behavior: "smooth", block: "center" });
    vacancy.style.boxShadow = "0 0 8px #0059b3";

    const respondBtn = vacancy.querySelector(SELECTORS.respondBtn);
    if (!respondBtn) {
      console.warn("‚õî –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞—é");
      vacancy.style.boxShadow = "0 0 4px red";
      continue;
    }

    // üõ°Ô∏è –ó–∞—â–∏—Ç–∞: –∫–Ω–æ–ø–∫–∞ –Ω–µ '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è'
    if (!["Respond", "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è"].includes(respondBtn.innerText)) {
      console.log(" –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∞—è, –ø—Ä–æ–ø—É—Å–∫–∞—é");
      continue;
    }

    const href = respondBtn?.getAttribute("href") || respondBtn?.dataset?.href;
    const vacancyId = (() => {
      try {
        const u = new URL(href, location.origin);
        return u.searchParams.get("vacancyId");
      } catch {
        return null;
      }
    })();

    // –ü—Ä–æ–ø—É—Å–∫ –ø–æ skip-–ª–∏—Å—Ç—É
    if (vacancyId && skip.has(vacancyId)) {
      console.warn("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—é –≤–∞–∫–∞–Ω—Å–∏—é (–≤ skip):", vacancyId);
      vacancy.style.boxShadow = "0 0 4px orange";
      continue;
    }

    await delay(500);

    const companyTitle = vacancy.querySelector(SELECTORS.companyTitle)?.innerText;

    if (["Respond", "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è"].includes(respondBtn?.innerText)) {
      const preClickDelay = getRandomDelay(3000, 5000);
      console.log(`‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º –ø–æ –∫–Ω–æ–ø–∫–µ: ${Math.floor(preClickDelay / 1000)} —Å–µ–∫`);
      await delay(preClickDelay);

      respondBtn.click();

      await delay(800);

      if (await handleAlreadyViewedAndExit()) return;

      const delayMs = getRandomDelay(5000, 10000);
      console.log(`‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ—Ç–∫–ª–∏–∫–æ–º: ${Math.floor(delayMs / 1000)} —Å–µ–∫`);
      await delay(delayMs);

      await confirmCountry();
      await confirmEmployerAlert();

      if (checkPopupActive()) {
        await submitCoverLetterPopup(companyTitle);
      } else {
        await submitCoverLetter(companyTitle);
      }
    }

    vacancy.style.boxShadow = "";
  }
}
